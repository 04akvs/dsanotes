Amazing subarrays:

You are given a string S, and you have to find all the amazing substrings of S.

Amazing Substring is one that starts with a vowel (a, e, i, o, u, A, E, I, O, U).

Input

Only argument given is string S.
Output

Return a single integer X mod 10003, here X is number of Amazing Substrings in given string.
Constraints

1 <= length(S) <= 1e6
S can have special characters
Example

Input
    ABEC

Output
    6

Explanation
	Amazing substrings of given string are :
	1. A
	2. AB
	3. ABE
	4. ABEC
	5. E
	6. EC
	here number of substrings are 6 and 6 % 10003 = 6.



Every vowel will form a amazing substring for every charcater including it and after it 

bool isVowel(char s){
    if(s=='A' || s=='E' || s=='I' || s=='O' || s=='U' || s=='a' ||  s=='e' || s=='i' || s=='o' || s=='u')
    return true;
    return false;
}
int Solution::solve(string str) {
    int n=str.size();int sum=0;
    for(int i=0;i<str.size();i++){
        if(isVowel(str[i])){
            sum+=(n-i)%10003;
        }
    }
    return sum%10003;
}


TC:O(n)
SC:O(1)



