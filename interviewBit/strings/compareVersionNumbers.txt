Asked in Amazon and Intuit 

Compare two version numbers version1 and version2.

If version1 > version2 return 1,
If version1 < version2 return -1,
otherwise return 0.
You may assume that the version strings are non-empty and contain only digits and the . character.
The . character does not represent a decimal point and is used to separate number sequences.
For instance, 2.5 is not "two and a half" or "half way to version three", it is the fifth second-level revision of the second first-level revision.

Here is an example of version numbers ordering:

0.1 < 1.1 < 1.2 < 1.13 < 1.13.4



Implementation based question:


int Solution::compareVersion(string A, string B) {
    int j=0;int i=0;
    while(i<A.size() || j<B.size()){
        unsigned long numa=0;unsigned long  numb=0;bool wentA=false;bool wentB=false;
        while(i<A.size() && A[i]!='.' ){
           numa=numa*10+(A[i]-'0');
           i++;
        }
        while(j<B.size() && B[j]!='.' ){
           numb=numb*10+(B[j]-'0');
           j++;
        }
        if(numa!=numb){//as numa and numb can be 0 too if no other 
        if(numa>numb)
        return 1;
        else if(numa<numb)
        return -1;
        }
        i++;j++;
    }
    return 0;
}

