asked in Adobe:



Note: It is intended for some problems to be ambiguous. You should gather all requirements up front before implementing one.

Please think of all the corner cases and clarifications yourself.

Validate if a given string is numeric.

Examples:

"0" => true
" 0.1 " => true
"abc" => false
"1 a" => false
"2e10" => true
Return 0 / 1 ( 0 for false, 1 for true ) for this problem

Clarify the question using “See Expected Output”

Is 1u ( which may be a representation for unsigned integers valid?

For this problem, no.

Is 0.1e10 valid?

Yes

-01.1e-10?

Yes

Hexadecimal numbers like 0xFF?

Not for the purpose of this problem

3. (. not followed by a digit)?

No

Can exponent have decimal numbers? 3e0.1?

Not for this problem.

Is 1f ( floating point number with f as prefix ) valid?

Not for this problem.

How about 1000LL or 1000L ( C++ representation for long and long long numbers )?

Not for this problem.

How about integers preceded by 00 or 0? like 008?

Yes for this problem




You just have to take care of of lot of cases where string might not be a numeric string 
bool charac(char ch){
    return ((ch>='a'&& ch<='z')||(ch>='A'&& ch<='Z'));
}
bool isdigit(char ch){
    return ch>='0' && ch<='9';
}
bool isop(char ch){
    return ch=='-'|| ch=='+';
}
bool isdec(int i,string s){
   while(i<s.size()){
       if(s[i]=='.')
       return true;
       i++;
   }
return false;
}
int Solution::isNumber(const string str) {
    int n=str.size();
    string s(n,' ');
    if(str==s)
    return false;
    //remove leading and trailing spaces 
    int i=0;int j=n-1;
    while(str[i]==' ')
    i++;
    while(str[j]==' '){
        j--;
    }int start=i;int end=j;
    for(int i=start;i<=end;i++){
        if(str[i]!='e' && charac(str[i])){
            return false;
        }else if(str[i]=='.'){
            if(i==end || !isdigit(str[i+1]))
            return false;
        }
        else if(str[i]=='e'){
            if(i==end || (!isop(str[i+1]) && !isdigit(str[i+1])) || isdec(i+1,str))
            return false;
        }else if(isop(str[i])){
            if(i==end || isop(str[i+1]) || !isdigit(str[i+1]))
            return false;
        }else if(!isdigit(str[i]))
        return false;
    }
    return true;
}
TC:O(n)
SC:O(1)
