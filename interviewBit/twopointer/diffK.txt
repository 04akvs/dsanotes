Given an array ‘A’ of sorted integers and another non negative integer k, find if there exists 2 indices i and j such that A[i] - A[j] = k, i != j.

Example:

Input :

    A : [1 3 5] 
    k : 4
Output : YES

as 5 - 1 = 4

Return 0 / 1 ( 0 for false, 1 for true ) for this problem

Try doing this in less than linear space complexity.



using hashmap:



without using any space:

two pointer approach 

int Solution::diffPossible(vector<int> &arr, int b) {
    int i=0;int j=1;int n=arr.size();
    while(i<n && j<n){
        if(i!=j && arr[j]-arr[i]==b)
        return true;
        else if(arr[j]-arr[i]>b){
            i++;
        }
        else
        j++;
    }
    return false;

}