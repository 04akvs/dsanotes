// optimal approach to find an element in a row ands column wise sorted matrix 
//given that the last element of row is always less than the first elememt of the next row 
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m=matrix.size();
       // int i=0;int j=n-1;
        if(matrix.size()==0)
            return false;
       int n=matrix[0].size();
       int low=0;int high=n*m-1;
        while(low<=high)
        {
            int mid=(low+high)/2;
            int row=mid/n;int col=mid%n;
            if(matrix[row][col]==target)
                return true;
            else if(matrix[row][col]>target)
                high=mid-1;
            else
                low=mid+1;
        }
        return false;
        
    }
};