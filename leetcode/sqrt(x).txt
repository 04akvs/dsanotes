Given a non-negative integer x, compute and return the square root of x.

Since the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned.

 

Example 1:

Input: x = 4
Output: 2
Example 2:

Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.


brute force basic approach :
class Solution {
public:
    int mySqrt(int x) {
        if(x==0 || x==1)
            return x;
        // Staring from 1, try all numbers until 
    // i*i is greater than or equal to x. 
       long long  i = 1, result = 1; 
    while (result <= x) 
    { 
      i++; 
      result = i * i; //result gets multiplies with itself everytime
    } 
    return i - 1; 
    }
};

TC:O(sqrt(x))
