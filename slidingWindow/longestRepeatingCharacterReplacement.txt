
Leetcode 424:
https://leetcode.com/problems/longest-repeating-character-replacement/

You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations.

 

Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.
Example 2:

Input: s = "AABABBA", k = 1
Output: 4
Explanation: Replace the one 'A' in the middle with 'B' and form "AABBBBA".
The substring "BBBB" has the longest repeating letters, which is 4.
 

Constraints:

1 <= s.length <= 105
s consists of only uppercase English letters.
0 <= k <= s.length


class Solution {
public:
    //maximum freq waale element ke alawa humein toh sab replace karna hoga thus
    //for every window hum ye dekhlenge ki kya number of characters being chenged are exceeding the given possible flips 'k'
    int characterReplacement(string s, int k) {
        int n=s.size();int count=0;int maxLen=INT_MIN;
         int j=0;
        vector<int>mp(26,0);
        for(int i=0;i<n;i++){
            mp[s[i]-'A']++;
            if((i-j+1)-*max_element(mp.begin(),mp.end())>k){//characters being replaced exceed 
                mp[s[j]-'A']--;
                j++;
            }
            maxLen=max(maxLen,i-j+1);
        }
        return maxLen;
    }
};