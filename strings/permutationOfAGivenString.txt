GFG link-
https://practice.geeksforgeeks.org/problems/permutations-of-a-given-string2041/1#


Given a string S. The task is to print all permutations of a given string.

 

Example 1:

Input: ABC
Output:
ABC ACB BAC BCA CAB CBA
Explanation:
Given string ABC has permutations in 6 
forms as ABC, ACB, BAC, BCA, CAB and CBA .
Example 2:

Input: ABSG
Output:
ABGS ABSG AGBS AGSB ASBG ASGB BAGS 
BASG BGAS BGSA BSAG BSGA GABS GASB 
GBAS GBSA GSAB GSBA SABG SAGB SBAG 
SBGA SGAB SGBA
Explanation:
Given string ABSG has 24 permutations.
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function find_permutaion() which takes the string S as input parameter and returns a vector of string in lexicographical order.

 

Expected Time Complexity: O(n! * n)

Expected Space Complexity: O(n)

 

Constraints:
1 <= length of string <= 5
 

 

Company Tags
 Accolite  Amazon  Cisco  Citrix  MAQ Software  OYO Rooms  Samsung  Snapdeal  Walmart  Zoho  Microsoft




Backtracking based approach :

void backtrack(string str,int n,vector<string>&per,int start,string s){
	    if(start==n-1)
	    {
	        per.push_back(s);
	        return ;
	    }
	    for(int i=start;i<n;i++){
	        swap(str[i],str[start]);
	        backtrack(str,n,per,start+1,s);
	        swap(str[i],str[start]);
	    }
	}
		vector<string>find_permutation(string str)
		{
		    // Code here there
		    vector<string>per;
		    int n=str.size();
		    backtrack(str,n,per,0,"");
		    //sort them as we need to print them in lexicographical order 
		    sort(per.begin(),per.end());
		    return per;
		}

 TC:O(n!*n)
 n! permutations and  looping n times 
