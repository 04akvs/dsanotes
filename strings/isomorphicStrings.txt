Leetcode 205:
https://leetcode.com/problems/isomorphic-strings/

Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true
 

Constraints:

1 <= s.length <= 5 * 104
t.length == s.length
s and t consist of any valid ascii character.



class Solution {
public:
    bool isIsomorphic(string s, string t) {
        int n=s.size();
        int m=t.size();
        unordered_map<char,char>sp;
        unordered_map<char,char>tp;
       for(int i=0;i<s.size();i++){
           if(sp.find(s[i])==sp.end() && tp.find(t[i])==tp.end()){
               sp[s[i]]=t[i];
               tp[t[i]]=s[i];
           }
           else
           {
               if(sp[s[i]]!=t[i] || tp[t[i]]!=s[i])
                   return false;
           }
       }
        return true;
    }
};

