Leetcode 5:
longest palindromic substring 

https://leetcode.com/problems/longest-palindromic-substring/


Brute force approach :

would be to find all possible substrings and check whether they are palindromes or not



class Solution {
public:
       
    string longestPalindrome(string s) {
        if(s.size()<=1)
            return s;
        int n=s.size();int maxlen=1;
        vector<vector<bool>>dp(n,vector<bool>(n,false));
        for(int i=0;i<n;i++)
        {
            dp[i][i]=true;
        }
        int start=0;int end=0;
        for(int i=n-1;i>=0;i--)
        {
            for(int j=i+1;j<n;j++){
                if(s[i]==s[j])
                {
                    if(j-i==1 || dp[i+1][j-1])
                    {
                        dp[i][j]=true;  
                       if(maxlen<j-i+1){
                           maxlen=j-i+1;
                           start=i;
                    }
                }
                }
            }
        }
        cout<<maxlen;
        return s.substr(start,maxlen);
    }
};

TC:O(n*n)
SC:O(n*n)
