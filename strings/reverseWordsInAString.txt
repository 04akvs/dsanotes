Leetcode 151:
https://leetcode.com/problems/reverse-words-in-a-string/


Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
class Solution {
public:
    string reverseWords(string s) {
        stack<string>st;string word="";
        for(int i=0;i<s.size();i++)
        {
           
          if(s[i]!=' ')
          {
              word+=s[i];
          }
            else
            {
                if(word!="")
                {st.push(word);
                st.push(" ");
                }
                word="";
            }
        }
        
        if(word!="")
        st.push(word);
        s="";
        if(st.top()==" ")
            st.pop();
        while(!st.empty())
        {
          s+=st.top();
            st.pop();
        }
        return s;
    }
};
//////////////////----------------///////////////////////////
Method 2:in O(1) space
class Solution {
public:
    string reverseWords(string s) {
        stack<string>st;string word="";string rev="";int lastword=0;
        for(int i=s.size()-1;i>=0;i--)
        {if(s[i]!=' ')
        {lastword=i;break;
        }
        }
        for(int i=0;i<s.size();i++)
        {
           
          if(s[i]!=' ')
          {
              word+=s[i];
          }
            else
            {
                if(word!="")
                {
                    rev=word+rev;
                    if(i!=lastword+1)
                    rev=" "+rev;
                }
                word="";
            }
        }
        
        if(word!="")
       rev=word+rev;
        return rev;
    }
};




OR :





class Solution {
public:
    string reverseWords(string s) {
         //let me start the string from the back
        int n=s.size();string str="";
        string word="";int k=0;
        for(int i=s.size()-1;i>=0;i--){
            if(s[i]!=' '){
                word=s[i]+word;
            }
            else{//space comes 
                
                if(word!="")
                {
                    str+=word+" ";
                    word="";
                }
            }
        }
        str+=word;
        if(str[str.size()-1]==' ')
            str=str.substr(0,str.size()-1);
        return str;
    }
};