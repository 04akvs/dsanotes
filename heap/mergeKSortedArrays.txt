#include<bits/stdc++.h>
using namespace std;

output: 0 1 2 3 4 6 9 10 11
int main()
{

     vector<vector<int> >arr = { {1, 3},
                  {2, 4, 6},
                  {0, 9, 10, 11}} ;
    priority_queue<pair<int,pair<int,int> >,vector<pair<int,pair<int,int> >>,greater<pair<int,pair<int,int> >> >pq;
    vector<int>v;
    //first we create a min heap of size k , inserting one node of each
    for(int i=0;i<arr.size();i++ )
    {
        pq.push({arr[i][0],{i,0}});//also insert their row and columns 
    }
    while(!pq.empty())
    {
        pair<int,pair<int,int> >p=pq.top();
        v.push_back(p.first);
        int i=p.second.first;int j=p.second.second;
        pq.pop();
        //now since we've processed one element of that row array we need to compare its next element
        if(j+1<arr[i].size())
        pq.push({arr[i][j+1],{i,j+1}});
    }
    for(int i=0;i<v.size();i++)
    cout<<v[i]<<" ";
    

    return  0;
    
}
tC:O(nklogk)
space:O(K)