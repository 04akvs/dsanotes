Given a Binary Tree, find maximum and minimum elements in it.

Example 1:

Input: 
           
Output: 11 1
Explanation:                           
 The maximum and minimum element in 
this binary tree is 11 and 1 respectively.
Example 2:

Input: 
           6
        / \
       5   8
      /
     2
Output: 8 2
Your Task:
You don't need to read input or print anything. Your task is to complete findMax() and findMin() functions which take root node of the tree as input parameter and return the maximum and minimum elements in the binary tree respectively.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)


Constraints:
1 <= Number of nodes <= 105
1 <= Data of a node <= 105



Maximum value can either be the root itself or either its left subtree can give maximum or its right subtree 
same goes for minimum 

class Solution
{
public:
 int findMax(Node *root)
    {
        //code here
       if(root==NULL)
       return INT_MIN;
       return max(root->data,max(findMax(root->left),findMax(root->right)));
    }
    int findMin(Node *root)
    {
        //code here
         if(root==NULL)
       return INT_MAX;
       return min(root->data,min(findMin(root->left),findMin(root->right)));
  

    }

};
TC:O(n)
SC:O(height)
