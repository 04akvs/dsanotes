class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int>pre;
        if(root==NULL)
        return pre;
        stack<Node*>st;
        st.push(root);
        while(!st.empty())
        {
            Node* temp=st.top();
            st.pop();
            pre.push_back(temp->val);
            reverse(temp->children.begin(),temp->children.end());
            for(int i=0;i<temp->children.size();i++)
            {
                st.push(temp->children[i]);
            }
        }
        return pre;
    }
};



///////////////////////////////////////////////////////////////////////////////////////



 class Solution {
public:
    void dfs(Node* root,vector<int>&pre)
    {
        if(root==NULL)
            return ;
        pre.push_back(root->val);
        for(int i=0;i<root->children.size();i++)
        {
            dfs(root->children[i],pre);
        }
    }
    vector<int> preorder(Node* root) {
        vector<int>pre;
        if(root)
            dfs(root,pre);
        return pre;
    }
};