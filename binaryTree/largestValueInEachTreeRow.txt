
Leetcode 515-


https://leetcode.com/problems/find-largest-value-in-each-tree-row/




Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).

 
Example 1:


Input: root = [1,3,2,5,3,null,9]
Output: [1,3,9]
Example 2:

Input: root = [1,2,3]
Output: [1,3]
Example 3:

Input: root = [1]
Output: [1]
Example 4:

Input: root = [1,null,2]
Output: [1,2]
Example 5:

Input: root = []
Output: []
 

Constraints:

The number of nodes in the tree will be in the range [0, 104].
-231 <= Node.val <= 231 - 1


First approach :


BFS based approach -level order traversal and find max at each level

class Solution {
public:
    //i think its possible using level order traversal 
    //BFS
    vector<int> largestValues(TreeNode* root) {
        vector<int>largest;
        if(root==NULL)
            return vector<int>();
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int sz=q.size();
             int maxnode=INT_MIN;
            while(sz--){
                TreeNode* temp=q.front();
                q.pop();
                maxnode=max(maxnode,temp->val);
                if(temp->left)
                    q.push(temp->left);
                if(temp->right)
                    q.push(temp->right);
            }
            largest.push_back(maxnode);
           
        }
        return largest ;
    }
};


TC:O(n) n is number of nodes 
