Given an n-ary tree, return the postorder traversal of its nodes' values.

Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).

 

Follow up:

Recursive solution is trivial, could you do it iteratively?

 

Example 1:



Input: root = [1,null,3,2,4,null,5,6]
Output: [5,6,3,2,4,1]


class Solution {
public:
    void postO(Node* root,vector<int>&post)
    {
        for (int i = 0;i < root->children.size(); i++)
        postO(root->children[i],post);
        post.push_back(root->val);
    }
    vector<int> postorder(Node* root) {
        vector<int>post;
        if(root)
        postO(root,post);
       return post;
            
    }
}



iterative approach:



