/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        if(head==NULL || head->next==NULL)
            return head;
        ListNode* temp=head;ListNode* curr=head->next;
        while(temp!=NULL)
        {
           if(curr!=NULL && curr->val==temp->val)
               curr=curr->next;
            else
            {
                temp->next=curr;
                temp=curr;
            }
        }
        return head;
    }
};
/////////////////////////////////////// USED ONLY A SINGLE POINTER ///////////////////////////////////
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        if(head==NULL || head->next==NULL)
            return head;
        ListNode* temp=head;
        while(temp!=NULL)
        {
           if(temp->next!=NULL && temp->val==temp->next->val)
               temp->next=temp->next->next;
            else
            {
                temp=temp->next;
            }
        }
        return head;
    }
};