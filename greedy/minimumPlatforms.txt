Given arrival and departure times of all trains that reach a railway station. 
Your task is to find the minimum number of platforms required for the railway station so that no train waits.
Note: Consider that all the trains arrive on the same day and leave on the same day. Also, arrival and departure times will not be same for a train, but we can have arrival time of one train equal to departure of the other.
In such cases, we need different platforms, i.e at any given instance of time, same platform can not be used for both departure of a train and arrival of another.

Input: N = 6 
arr[] = [0900  0940 0950  1100 1500 1800]
dep[] = [0910 1200 1120 1130 1900 2000]
Output: 3
Explanation: 
Minimum 3 platforms are required to 
safely arrive and depart all trains.




best explanation: https://youtu.be/dxVcMDI7vyI


TC:O(nlogn) 

 int findPlatform(int arr[], int dep[], int n)
    {
    
    	sort(arr,arr+n);
    	sort(dep,dep+n);
    	int i=0;//first train ka dep
    	int j=1;//second train arrival
    	int plat=0;int minPlat=0;
    	plat++;
    	while(j<n && i<n){
    	    if(arr[j]<=dep[i]){//then needs obe platform more 
    	        plat++;
    	        j++;
    	    }
    	    else if(dep[i]<arr[j]){//if departure time is less then it's going  thus leaves the platform empty 
    	        plat--;
    	        i++;
    	    }
    	    minPlat=max(minPlat,plat);
    	}
    	return minPlat;
    	
    }

	TC:O(nlogn)
	sc:O(1)

	