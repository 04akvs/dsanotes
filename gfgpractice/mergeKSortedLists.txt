Given K sorted linked lists of different sizes. The task is to merge them in such a way that after merging they will be a single sorted linked list.

Example 1:

Input:
K = 4
value = {{1,2,3},{4 5},{5 6},{7,8}}
Output: 1 2 3 4 5 5 6 7 8
Explanation:
The test case has 4 sorted linked 
list of size 3, 2, 2, 2
1st    list     1 -> 2-> 3
2nd   list      4->5
3rd    list      5->6
4th    list      7->8
The merged list will be
1->2->3->4->5->5->6->7->8.


Recursive approach:

Node* merge(Node* a,Node* b)
{
    if(a==NULL)
    return b;
    if(b==NULL)
    return a;
    Node* temp=NULL;
    if(a->data<=b->data)
    {
        temp=a;
        temp->next=merge(a->next,b);
    }
    else
    {
        temp=b;
        temp->next=merge(a,b->next);
    }
    return temp;
}
Node * mergeKLists(Node *arr[], int N)
{
       // Your code here
       Node* result=arr[N-1];
       for(int i=N-2;i>=0;i--)
       {
           result=merge(arr[i],result);
       }
       return result;
       
}


