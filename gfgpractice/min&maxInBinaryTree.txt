Given a Binary Tree, find maximum and minimum elements in it.

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an integer n denoting the number of edges. The following line contains the edges as shown in the example.

Output:
Print two space-separated integers maximum and minimum element in the binary tree.

Constraints:
1<=T<=10^5
1<=n<=10^5
1<=data of the node<=10^5

Example:
Input:
1
7
2 7 L 2 5 R 7 6 R 6 1 L 6 11 R 5 9 R 9 4 L

Output:
11 1


void preorderMax(struct node* root,int &maxx)
{
    if(root==NULL)
    return ;
    if(root->data>maxx)
    maxx=root->data;
    preorderMax(root->left,maxx);
    preorderMax(root->right,maxx);
}
void preorderMin(struct node* root,int &minn)
{
    if(root==NULL)
    return ;
    if(root->data<minn)
    minn=root->data;
    preorderMin(root->left,minn);
    preorderMin(root->right,minn);
}
int findMax(struct node* root)
{
// Your code goes here
int maxx=INT_MIN;
preorderMax(root,maxx);
return maxx;
 
}

// Returns minimum value in a given Binary Tree
int findMin(struct node* root)
{
// Your code goes here
int minn=INT_MAX;
preorderMin(root,minn);
return minn;
}
