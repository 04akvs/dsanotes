all pairs shortest paths

watch tech dose:



#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pb push_back
#define pf push_front

void floydWarshall(ll graph[101][101], ll n){
    ll dist[101][101];
    for(ll i=0; i<n; i++){
        for(ll j=0; j<n; j++){
            dist[i][j] = graph[i][j];
        }
    }
    
    for(ll k=0; k<n; k++){
        for(ll i=0; i<n; i++){
            for(ll j=0; j<n; j++){
                if(dist[i][j] > dist[i][k] + dist[k][j]){
                    dist[i][j] = dist[i][k] + dist[k][j];
                }
            }
        }
    }
    
    for(ll i=0; i<n; i++){
        for(ll j=0; j<n; j++){
            if(dist[i][j] >= 10000000){
                cout<<"INF";
            }else{
                cout<<dist[i][j];    
            }
            cout<<" ";
        }
        cout<<"\n";
    }
}

int main() {
	ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll t;
    cin>>t;
    while(t--)
    {
        ll n;   cin>>n;
        ll graph[101][101];
        for(ll i=0; i<n; i++){
            for(ll j=0; j<n; j++){
                cin>>graph[i][j];
            }
        }
        
        floydWarshall(graph, n);
    }
    return 0;
}


TC:O(v*v*v)
