GFG:
https://practice.geeksforgeeks.org/problems/-rearrange-array-alternately-1587115620/1#


Given a sorted array of positive integers.
 Your task is to rearrange  the array elements alternatively i.e 
 first element should be max value, second should be min value, third should be second max, fourth should be second min and so on.

Example 1:

Input:
N = 6
arr[] = {1,2,3,4,5,6}
Output: 6 1 5 2 4 3
Explanation: Max element = 6, min = 1, 
second max = 5, second min = 2, and 
so on... Modified array is : 6 1 5 2 4 3.
Example 2:

Input:
N = 11
arr[]={10,20,30,40,50,60,70,80,90,100,110}
Output:110 10 100 20 90 30 80 40 70 50 60
Explanation: Max element = 110, min = 10, 
second max = 100, second min = 20, and 
so on... Modified array is : 
110 10 100 20 90 30 80 40 70 50 60.
Your Task:
The task is to complete the function rearrange() which rearranges elements as explained above. Printing of the modified array will be handled by driver code.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).

Constraints:
1 <= N <= 107
1 <= arr[i] <= 107

Company Tags
 Zoho


Brute force approach :
take in extra array and sort that then put it appropriately 

void rearrange(long long *arr, int n) 
    { 
    	
    	// Your code here
    	long long* a=new long long[n];
    	for(int i=0;i<n;i++){
    	    a[i]=arr[i];
    	}
    	long long  i=n-1;long long  j=0;
    	for(long long k=0;k<n;k++){
    	    if(k%2==0)
    	    arr[k]=a[i--];
    	    else 
    	    arr[k]=a[j++];
    	}
    }
    TC:O(n)
    sc:O(n)



Better approach w/o using extra space :

https://www.geeksforgeeks.org/rearrange-array-maximum-minimum-form-set-2-o1-extra-space/

based on modulo and arithmetics to store two numbers at one place

How does expression “arr[i] += arr[max_index] % max_element * max_element” work ? 
The purpose of this expression is to store two elements at index arr[i]. arr[max_index] is stored as multiplier and “arr[i]” is stored as remainder. 
For example in {1 2 3 4 5 6 7 8 9},
max_element is 10 and we store 91 at index 0. With 91, we can get original element as 91%10 and new element as 91/10.



 void rearrange(long long *arr, int n) 
    { 
    	
    	// Your code here
    	long long maxele=arr[n-1]+1;
    	int maxindex=n-1;
    	int minindex=0;
    	for(int i=0;i<n;i++){
    	    if(i%2==0)
    	    {
    	        arr[i]=arr[i]+arr[maxindex]%maxele*maxele;
    	        maxindex--;
    	    }
    	    else
    	    {
    	        arr[i]=arr[i]+arr[minindex]%maxele*maxele;
    	        minindex++;
    	    }
    	}
    	for (int i = 0; i < n; i++) 
        arr[i] = arr[i] / maxele;
    	
    	 
    }

    TC:O(n)
    SC:O(1)
    