Leetcode 219:

Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

 

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109
0 <= k <= 105


Method 1: 
use hashmap to store indices of elements and check if any elemenet repeats 


class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map<int,int>mark;//use unordered map to store indexes 
        
        for(int i=0;i<nums.size();i++)
        {
           
            if(mark.count(nums[i]) && abs(mark[nums[i]]-i)<=k)
                return true;
            else
                mark[nums[i]]=i;
                
        }
            return false;
    }
};



TC:O(n)
sC:O(n)
